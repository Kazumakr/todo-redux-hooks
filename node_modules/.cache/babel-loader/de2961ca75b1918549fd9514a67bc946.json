{"ast":null,"code":"var _jsxFileName = \"/Users/kazumakuramoto/Desktop/a0521-cra-redux-hooks/src/container/TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ToDos from \"../components/ToDos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [filterValue, setFilterValue] = useState(\"SHOW_ALL\");\n  const todoList = useSelector(state => state.toDoList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todoList.map(todo => /*#__PURE__*/_jsxDEV(ToDos, {\n      todo: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoList, \"LNZ62/NoqEBEFbvQAVZtd+YYG8U=\", false, function () {\n  return [useSelector];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/kazumakuramoto/Desktop/a0521-cra-redux-hooks/src/container/TodoList.jsx"],"names":["React","useState","useSelector","ToDos","TodoList","filterValue","setFilterValue","todoList","state","toDoList","map","todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,UAAD,CAA9C;AAEA,QAAMM,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA5B;AAEA,sBACC;AAAA,cACEF,QAAQ,CAACG,GAAT,CAAcC,IAAD,iBACb,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,YADA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAZD;;GAAMP,Q;UAGYF,W;;;KAHZE,Q;AAcN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ToDos from \"../components/ToDos\";\n\nconst TodoList = () => {\n\tconst [filterValue, setFilterValue] = useState(\"SHOW_ALL\");\n\n\tconst todoList = useSelector((state) => state.toDoList);\n\n\treturn (\n\t\t<div>\n\t\t\t{todoList.map((todo) => (\n\t\t\t\t<ToDos todo={todo} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}